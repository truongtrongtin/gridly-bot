{
  "name": "gridly-slack-bot",
  "version": "1.0.0",
  "description": "Bolt getting started app in TypeScript",
  "license": "MIT",
  "type": "module",
  "main": "dist/main.js",
  "scripts": {
    "build": "tsc",
    "dev": "tsc-watch --onSuccess \"env-cmd functions-framework --target=expressApp\"",
    "gcp-build": "tsc",
    "lint": "eslint --fix",
    "prepare": "node -e \"try { require('husky').install() } catch (e) {if (e.code !== 'MODULE_NOT_FOUND') throw e}\"",
    "prettier": "prettier --write ."
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "lint-staged": {
    "*.ts": "eslint --fix"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all"
  },
  "eslintConfig": {
    "env": {
      "jest": true,
      "node": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": "tsconfig.json",
      "sourceType": "module"
    },
    "extends": [
      "plugin:@typescript-eslint/recommended",
      "plugin:prettier/recommended"
    ],
    "rules": {
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-non-null-assertion": "off"
    },
    "root": true
  },
  "dependencies": {
    "@google-cloud/functions-framework": "^3.3.0",
    "@slack/bolt": "3.16.0",
    "chrono-node": "2.7.3",
    "date-fns": "2.30.0"
  },
  "devDependencies": {
    "@commitlint/config-conventional": "18.4.3",
    "@types/node": "20.10.4",
    "@typescript-eslint/eslint-plugin": "6.13.2",
    "@typescript-eslint/parser": "6.13.2",
    "commitlint": "18.4.3",
    "env-cmd": "^10.1.0",
    "eslint": "8.55.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-prettier": "5.0.1",
    "husky": "8.0.3",
    "lint-staged": "15.2.0",
    "prettier": "3.1.1",
    "tsc-watch": "^6.0.4",
    "typescript": "5.3.3"
  },
  "engines": {
    "node": ">= 20.0.0"
  },
  "renovate": {
    "extends": [
      "config:base",
      ":preserveSemverRanges",
      ":semanticCommitTypeAll(chore)"
    ],
    "semanticCommits": "enabled",
    "separateMajorMinor": false,
    "dependencyDashboard": false,
    "packageRules": [
      {
        "matchUpdateTypes": [
          "patch",
          "minor"
        ],
        "groupName": "patch/minor dependencies",
        "groupSlug": "all-non-major",
        "automerge": true,
        "automergeType": "branch"
      }
    ],
    "schedule": [
      "every weekend"
    ]
  }
}
